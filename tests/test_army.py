# coding: utf-8

from unittest   import TestCase
from random     import seed

from human      import AHuman, DISCIPLINE
from division   import ADivision
from army       import AnArmy

class AnArmyTestCase( TestCase ):
    def setUp( self ):
        seed( 42 )

    def test_constructor( self ):
        army = AnArmy()
        self.assertTrue( army.identifier    == 0 )
        self.assertTrue( army.commander is None )
        self.assertTrue( army.strength      == 0 )
        self.assertTrue( army.divisions     == 0 )
        self.assertTrue( army.weapons       == 0 )
        self.assertTrue( army.armours       == 0 )
        self.assertTrue( army.max_divisions == 0 )
        self.assertTrue( army.discipline    == 0 )
        self.assertTrue( army.attack        == 0 )
        self.assertTrue( army.defence       == 0 )
        self.assertTrue( army.logistics     == 0 )
        self.assertTrue( army.geo_position  == ( 0, 0, 0) )
        army2 = AnArmy( identifier=69 )
        self.assertTrue( army2.identifier   == 69 )

    def test_set_remove_commander( self ):
        army        = AnArmy()
        general     = AHuman()
        general.SetWeapon( 20 )
        general.SetArmour( 15 )
        for i in range( 20 ):
            general.IncreaseSkill( all_skills=True )
        army.SetCommander( general )
        self.assertTrue( army.commander     == general )
        self.assertTrue( army.strength      == 0 )
        self.assertTrue( army.divisions     == 0 )
        self.assertTrue( army.weapons       == 20 )
        self.assertTrue( army.armours       == 15 )
        self.assertTrue( army.max_divisions == 16 )
        self.assertTrue( army.discipline    == 14 )
        self.assertTrue( army.attack        == 14 )
        self.assertTrue( army.defence       == 17 )
        self.assertTrue( army.logistics     == 14 )
        ex_general  = army.RemoveCommander()
        self.assertTrue( ex_general         == general )
        self.assertTrue( army.commander     == None )
        self.assertTrue( army.strength      == 0 )
        self.assertTrue( army.divisions     == 0 )
        self.assertTrue( army.weapons       == 0 )
        self.assertTrue( army.armours       == 0 )
        self.assertTrue( army.max_divisions == 0 )
        self.assertTrue( army.discipline    == 0 )
        self.assertTrue( army.attack        == 0 )
        self.assertTrue( army.defence       == 0 )
        self.assertTrue( army.logistics     == 0 )

    def test_add_remove_division( self ):
        army    = AnArmy()
        general = AHuman()
        general.SetWeapon( 20 )
        general.SetArmour( 20 )
        for i in range( 20 ):
            general.IncreaseSkill( all_skills=True )
        divs    = []
        for i in range( 1, 6 ):
            cap = AHuman( identifier=( 1000 * i ) )
            cap.SetWeapon( 10 )
            cap.SetArmour( 10 )
            for j in range( 10 ):
                cap.IncreaseSkill( all_skills=True )
            div = ADivision( identifier=i )
            div.SetCommander( cap )

            soldiers = [ AHuman( identifier=x ) for x in range( i * 100, i * 100 + 10 ) ]
            for sol in soldiers:
                sol.SetWeapon( 5 )
                sol.SetArmour( 5 )
                for dt in range( 5 ):
                    sol.IncreaseSkill( skill=DISCIPLINE )
            div.AddManySoldiers( soldiers )
            divs.append( div )
        army.AddDivision( divs[ 0 ] )
        self.assertTrue( army.commander     == None )
        self.assertTrue( army.strength      == 11 )
        self.assertTrue( army.divisions     == 1 )
        self.assertTrue( army.weapons       == 5.45 )
        self.assertTrue( army.armours       == 5.45 )
        self.assertTrue( army.max_divisions == 0 )
        self.assertTrue( army.discipline    == 0 )
        self.assertTrue( army.attack        == 0 )
        self.assertTrue( army.defence       == 0 )
        self.assertTrue( army.logistics     == 0 )
        army.SetCommander( general )
        self.assertTrue( army.commander     == general )
        self.assertTrue( army.strength      == 11 )
        self.assertTrue( army.divisions     == 1 )
        self.assertTrue( army.weapons       == 12.72 )
        self.assertTrue( army.armours       == 12.72 )
        self.assertTrue( army.max_divisions == 16 )
        self.assertTrue( army.discipline    == 151.48 )
        self.assertTrue( army.attack        == 140.0 )
        self.assertTrue( army.defence       == 340.0 )
        self.assertTrue( army.logistics     == 196.0 )
        army.AddDivision( divs[ 1 ] )
        self.assertTrue( army.strength      == 22 )
        self.assertTrue( army.divisions     == 2 )
        self.assertTrue( army.weapons       == 10.3 )
        self.assertTrue( army.armours       == 10.3 )
        self.assertTrue( army.discipline    == 157.22 )
        self.assertTrue( army.attack        == 133.0 )
        self.assertTrue( army.defence       == 289.0 )
        self.assertTrue( army.logistics     == 182.0 )
        army.AddDivision( divs[ 2 ] )
        army.AddDivision( divs[ 3 ] )
        army.AddDivision( divs[ 4 ] )
        self.assertTrue( army.strength      == 55 )
        self.assertTrue( army.divisions     == 5 )
        self.assertTrue( army.weapons       == 7.88 )
        self.assertTrue( army.armours       == 7.88 )
        self.assertTrue( army.discipline    == 147.14 )
        self.assertTrue( army.attack        == 190.4 )
        self.assertTrue( army.defence       == 200.6 )
        self.assertTrue( army.logistics     == 159.6 )
        ex_division = army.RemoveDivision( 1 )
        self.assertTrue( ex_division        == divs[ 0 ] )
        self.assertTrue( army.strength      == 44 )
        self.assertTrue( army.divisions     == 4 )
        self.assertTrue( army.weapons       == 8.36 )
        self.assertTrue( army.armours       == 8.36 )
        self.assertTrue( army.discipline    == 146.06 )
        self.assertTrue( army.attack        == 203.0 )
        self.assertTrue( army.defence       == 165.75 )
        self.assertTrue( army.logistics     == 150.5 )
        army.RemoveCommander()
        army.RemoveDivision( 2 )
        self.assertTrue( army.strength      == 33 )
        self.assertTrue( army.divisions     == 3 )
        self.assertTrue( army.weapons       == 5.45 )
        self.assertTrue( army.armours       == 5.45 )
        self.assertTrue( army.discipline    == 0 )
        self.assertTrue( army.attack        == 0 )
        self.assertTrue( army.defence       == 0 )
        self.assertTrue( army.logistics     == 0 )
        for i in range( 7 ):
            general.DecreaseSkills()
        army.SetCommander( general )
        army.AddDivision( divs[ 0 ] )
        army.AddDivision( divs[ 1 ] )
        self.assertTrue( army.strength      == 55 )
        self.assertTrue( army.divisions     == 5 )
        self.assertTrue( army.weapons       == 7.88 )
        self.assertTrue( army.armours       == 7.88 )
        self.assertTrue( army.discipline    == -3 )
        self.assertTrue( army.attack        == 95.2 )
        self.assertTrue( army.defence       == 0 )
        self.assertTrue( army.logistics     == 0 )
        with self.assertRaises( AssertionError ):
            army.AddDivision( divs[ 0 ] )
